# OnlyOffice Document Server Default Values
# This is a YAML-formatted file for Helm chart values

# Global settings
global:
  # Environment name
  environment: production

# Image configuration
image:
  repository: onlyoffice/documentserver
  pullPolicy: IfNotPresent
  tag: "8.0"  # Overrides the image tag

# Number of replicas
replicaCount: 2

# Pod configuration
podConfig:
  # Resource limits and requests
  resources:
    requests:
      memory: "2Gi"
      cpu: "1000m"
    limits:
      memory: "4Gi"
      cpu: "2000m"

  # Security context
  securityContext:
    runAsNonRoot: false
    runAsUser: 0
    fsGroup: 0

  # Node affinity for scheduling
  affinity: {}

  # Pod tolerations
  tolerations: []

# Service configuration
service:
  type: ClusterIP
  port: 80
  targetPort: 80
  # For production, consider using LoadBalancer
  # type: LoadBalancer

# Ingress configuration (optional)
ingress:
  enabled: false
  className: "nginx"
  annotations:
    # cert-manager.io/cluster-issuer: "letsencrypt-prod"
  hosts:
    - host: onlyoffice.local
      paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: onlyoffice-tls
  #    hosts:
  #      - onlyoffice.local

# Persistence settings
persistence:
  enabled: true
  # storageClassName must exist in your cluster
  # For microK8s, you can use: microk8s-hostpath
  storageClassName: "microk8s-hostpath"
  accessMode: ReadWriteOnce
  size: 50Gi

# Database configuration (PostgreSQL)
postgresql:
  enabled: false
  # Use external PostgreSQL database
  externalDatabase:
    host: "postgres.onlyoffice.svc.cluster.local"
    port: 5432
    username: "onlyoffice"
    password: "onlyoffice-password"
    database: "onlyoffice"

# Message Queue (RabbitMQ) configuration
rabbitmq:
  enabled: false
  # Use external RabbitMQ from local-hcm-system namespace
  externalRabbitMQ:
    host: "rabbitmq.local-hcm-system.svc.cluster.local"
    port: 5672
    username: "hcmpayroll"  # Default RabbitMQ user
    password: "hcmpayroll1234"  # From the secret: rabbitmq-password (base64 decoded)

# Environment variables for OnlyOffice Document Server
env:
  # JWT configuration
  JWT_ENABLED: "true"
  JWT_SECRET: "your-jwt-secret-key-change-me"
  
  # Database configuration (will be overridden by PostgreSQL settings)
  DB_TYPE: "postgres"
  
  # Cluster mode
  CLUSTER_MODE: "true"

# ConfigMap for additional configurations
configMap:
  enabled: true
  # OnlyOffice Document Server configuration overrides
  onlyofficeConfig:
    storage:
      urlExpires: 1800  # 30 minutes - cache expiration for converted files
    expire:
      files: 1800       # 30 minutes - cleanup period for cached files
      filesCron: "*/30 * * * * *"  # Run cleanup every 30 minutes

# Secrets
secrets:
  # Enable to create secrets for sensitive data
  enabled: true

# Service Account configuration
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# File Server Sidecar Configuration
# Simple HTTP file server running alongside OnlyOffice for document storage
fileServer:
  enabled: true
  image:
    repository: python
    pullPolicy: IfNotPresent
    tag: "3.11-slim"  # Use standard Python image from Docker Hub
  port: 9000
  storagePath: "/var/lib/onlyoffice-storage"
  persistence:
    size: "5Gi"
  resources:
    requests:
      memory: "128Mi"
      cpu: "50m"
    limits:
      memory: "256Mi"
      cpu: "200m"

# HPA - Horizontal Pod Autoscaling
autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 5
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80

# Network Policy
networkPolicy:
  enabled: false

# Pod Disruption Budget
podDisruptionBudget:
  enabled: true
  minAvailable: 1
